# source: https://eu1.prisma.sh/alterview/bungin-server/dev
# timestamp: Sat Dec 29 2018 15:01:03 GMT+0330 (Iran Standard Time)

type AggregateCategory {
  count: Int!
}

type AggregateCopyright {
  count: Int!
}

type AggregateFollowRelation {
  count: Int!
}

type AggregatePodcastEpisode {
  count: Int!
}

type AggregatePodcastStation {
  count: Int!
}

type AggregateTag {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type AggregateVoteReview {
  count: Int!
}

type BatchPayload {
  """The number of nodes that have been affected by the Batch operation."""
  count: Long!
}

type Category implements Node {
  id: ID!
  title: String!
  description: String
  image: String
  motherCategory: Category
  count: Int
}

"""A connection to a list of items."""
type CategoryConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [CategoryEdge]!
  aggregate: AggregateCategory!
}

input CategoryCreateInput {
  title: String!
  description: String
  image: String
  count: Int
  motherCategory: CategoryCreateOneInput
}

input CategoryCreateOneInput {
  create: CategoryCreateInput
  connect: CategoryWhereUniqueInput
}

"""An edge in a connection."""
type CategoryEdge {
  """The item at the end of the edge."""
  node: Category!

  """A cursor for use in pagination."""
  cursor: String!
}

enum CategoryOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  description_ASC
  description_DESC
  image_ASC
  image_DESC
  count_ASC
  count_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type CategoryPreviousValues {
  id: ID!
  title: String!
  description: String
  image: String
  count: Int
}

type CategorySubscriptionPayload {
  mutation: MutationType!
  node: Category
  updatedFields: [String!]
  previousValues: CategoryPreviousValues
}

input CategorySubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [CategorySubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [CategorySubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CategorySubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: CategoryWhereInput
}

input CategoryUpdateDataInput {
  title: String
  description: String
  image: String
  count: Int
  motherCategory: CategoryUpdateOneInput
}

input CategoryUpdateInput {
  title: String
  description: String
  image: String
  count: Int
  motherCategory: CategoryUpdateOneInput
}

input CategoryUpdateManyMutationInput {
  title: String
  description: String
  image: String
  count: Int
}

input CategoryUpdateOneInput {
  create: CategoryCreateInput
  connect: CategoryWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: CategoryUpdateDataInput
  upsert: CategoryUpsertNestedInput
}

input CategoryUpsertNestedInput {
  update: CategoryUpdateDataInput!
  create: CategoryCreateInput!
}

input CategoryWhereInput {
  """Logical AND on all given filters."""
  AND: [CategoryWhereInput!]

  """Logical OR on all given filters."""
  OR: [CategoryWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CategoryWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  image: String

  """All values that are not equal to given value."""
  image_not: String

  """All values that are contained in given list."""
  image_in: [String!]

  """All values that are not contained in given list."""
  image_not_in: [String!]

  """All values less than the given value."""
  image_lt: String

  """All values less than or equal the given value."""
  image_lte: String

  """All values greater than the given value."""
  image_gt: String

  """All values greater than or equal the given value."""
  image_gte: String

  """All values containing the given string."""
  image_contains: String

  """All values not containing the given string."""
  image_not_contains: String

  """All values starting with the given string."""
  image_starts_with: String

  """All values not starting with the given string."""
  image_not_starts_with: String

  """All values ending with the given string."""
  image_ends_with: String

  """All values not ending with the given string."""
  image_not_ends_with: String
  count: Int

  """All values that are not equal to given value."""
  count_not: Int

  """All values that are contained in given list."""
  count_in: [Int!]

  """All values that are not contained in given list."""
  count_not_in: [Int!]

  """All values less than the given value."""
  count_lt: Int

  """All values less than or equal the given value."""
  count_lte: Int

  """All values greater than the given value."""
  count_gt: Int

  """All values greater than or equal the given value."""
  count_gte: Int
  motherCategory: CategoryWhereInput
}

input CategoryWhereUniqueInput {
  id: ID
}

type Copyright implements Node {
  id: ID!
  title: String!
  description: String
  image: String
  count: Int
}

"""A connection to a list of items."""
type CopyrightConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [CopyrightEdge]!
  aggregate: AggregateCopyright!
}

input CopyrightCreateInput {
  title: String!
  description: String
  image: String
  count: Int
}

input CopyrightCreateOneInput {
  create: CopyrightCreateInput
  connect: CopyrightWhereUniqueInput
}

"""An edge in a connection."""
type CopyrightEdge {
  """The item at the end of the edge."""
  node: Copyright!

  """A cursor for use in pagination."""
  cursor: String!
}

enum CopyrightOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  description_ASC
  description_DESC
  image_ASC
  image_DESC
  count_ASC
  count_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type CopyrightPreviousValues {
  id: ID!
  title: String!
  description: String
  image: String
  count: Int
}

type CopyrightSubscriptionPayload {
  mutation: MutationType!
  node: Copyright
  updatedFields: [String!]
  previousValues: CopyrightPreviousValues
}

input CopyrightSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [CopyrightSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [CopyrightSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CopyrightSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: CopyrightWhereInput
}

input CopyrightUpdateDataInput {
  title: String
  description: String
  image: String
  count: Int
}

input CopyrightUpdateInput {
  title: String
  description: String
  image: String
  count: Int
}

input CopyrightUpdateManyMutationInput {
  title: String
  description: String
  image: String
  count: Int
}

input CopyrightUpdateOneInput {
  create: CopyrightCreateInput
  connect: CopyrightWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: CopyrightUpdateDataInput
  upsert: CopyrightUpsertNestedInput
}

input CopyrightUpsertNestedInput {
  update: CopyrightUpdateDataInput!
  create: CopyrightCreateInput!
}

input CopyrightWhereInput {
  """Logical AND on all given filters."""
  AND: [CopyrightWhereInput!]

  """Logical OR on all given filters."""
  OR: [CopyrightWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CopyrightWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  image: String

  """All values that are not equal to given value."""
  image_not: String

  """All values that are contained in given list."""
  image_in: [String!]

  """All values that are not contained in given list."""
  image_not_in: [String!]

  """All values less than the given value."""
  image_lt: String

  """All values less than or equal the given value."""
  image_lte: String

  """All values greater than the given value."""
  image_gt: String

  """All values greater than or equal the given value."""
  image_gte: String

  """All values containing the given string."""
  image_contains: String

  """All values not containing the given string."""
  image_not_contains: String

  """All values starting with the given string."""
  image_starts_with: String

  """All values not starting with the given string."""
  image_not_starts_with: String

  """All values ending with the given string."""
  image_ends_with: String

  """All values not ending with the given string."""
  image_not_ends_with: String
  count: Int

  """All values that are not equal to given value."""
  count_not: Int

  """All values that are contained in given list."""
  count_in: [Int!]

  """All values that are not contained in given list."""
  count_not_in: [Int!]

  """All values less than the given value."""
  count_lt: Int

  """All values less than or equal the given value."""
  count_lte: Int

  """All values greater than the given value."""
  count_gt: Int

  """All values greater than or equal the given value."""
  count_gte: Int
}

input CopyrightWhereUniqueInput {
  id: ID
}

scalar DateTime

type FollowRelation {
  user: User!
  follower: User!
}

"""A connection to a list of items."""
type FollowRelationConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [FollowRelationEdge]!
  aggregate: AggregateFollowRelation!
}

input FollowRelationCreateInput {
  user: UserCreateOneWithoutFollowersInput!
  follower: UserCreateOneWithoutFollowingInput!
}

input FollowRelationCreateManyWithoutFollowerInput {
  create: [FollowRelationCreateWithoutFollowerInput!]
}

input FollowRelationCreateManyWithoutUserInput {
  create: [FollowRelationCreateWithoutUserInput!]
}

input FollowRelationCreateWithoutFollowerInput {
  user: UserCreateOneWithoutFollowersInput!
}

input FollowRelationCreateWithoutUserInput {
  follower: UserCreateOneWithoutFollowingInput!
}

"""An edge in a connection."""
type FollowRelationEdge {
  """The item at the end of the edge."""
  node: FollowRelation!

  """A cursor for use in pagination."""
  cursor: String!
}

enum FollowRelationOrderByInput {
  id_ASC
  id_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type FollowRelationSubscriptionPayload {
  mutation: MutationType!
  node: FollowRelation
  updatedFields: [String!]
}

input FollowRelationSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [FollowRelationSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [FollowRelationSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [FollowRelationSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: FollowRelationWhereInput
}

input FollowRelationUpdateManyWithoutFollowerInput {
  create: [FollowRelationCreateWithoutFollowerInput!]
}

input FollowRelationUpdateManyWithoutUserInput {
  create: [FollowRelationCreateWithoutUserInput!]
}

input FollowRelationWhereInput {
  """Logical AND on all given filters."""
  AND: [FollowRelationWhereInput!]

  """Logical OR on all given filters."""
  OR: [FollowRelationWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [FollowRelationWhereInput!]
  user: UserWhereInput
  follower: UserWhereInput
}

"""Raw JSON value"""
scalar Json

"""
The `Long` scalar type represents non-fractional signed whole numeric values.
Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

type Mutation {
  createUser(data: UserCreateInput!): User!
  createFollowRelation(data: FollowRelationCreateInput!): FollowRelation!
  createVoteReview(data: VoteReviewCreateInput!): VoteReview!
  createPodcastStation(data: PodcastStationCreateInput!): PodcastStation!
  createPodcastEpisode(data: PodcastEpisodeCreateInput!): PodcastEpisode!
  createCategory(data: CategoryCreateInput!): Category!
  createTag(data: TagCreateInput!): Tag!
  createCopyright(data: CopyrightCreateInput!): Copyright!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updatePodcastStation(data: PodcastStationUpdateInput!, where: PodcastStationWhereUniqueInput!): PodcastStation
  updatePodcastEpisode(data: PodcastEpisodeUpdateInput!, where: PodcastEpisodeWhereUniqueInput!): PodcastEpisode
  updateCategory(data: CategoryUpdateInput!, where: CategoryWhereUniqueInput!): Category
  updateTag(data: TagUpdateInput!, where: TagWhereUniqueInput!): Tag
  updateCopyright(data: CopyrightUpdateInput!, where: CopyrightWhereUniqueInput!): Copyright
  deleteUser(where: UserWhereUniqueInput!): User
  deletePodcastStation(where: PodcastStationWhereUniqueInput!): PodcastStation
  deletePodcastEpisode(where: PodcastEpisodeWhereUniqueInput!): PodcastEpisode
  deleteCategory(where: CategoryWhereUniqueInput!): Category
  deleteTag(where: TagWhereUniqueInput!): Tag
  deleteCopyright(where: CopyrightWhereUniqueInput!): Copyright
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  upsertPodcastStation(where: PodcastStationWhereUniqueInput!, create: PodcastStationCreateInput!, update: PodcastStationUpdateInput!): PodcastStation!
  upsertPodcastEpisode(where: PodcastEpisodeWhereUniqueInput!, create: PodcastEpisodeCreateInput!, update: PodcastEpisodeUpdateInput!): PodcastEpisode!
  upsertCategory(where: CategoryWhereUniqueInput!, create: CategoryCreateInput!, update: CategoryUpdateInput!): Category!
  upsertTag(where: TagWhereUniqueInput!, create: TagCreateInput!, update: TagUpdateInput!): Tag!
  upsertCopyright(where: CopyrightWhereUniqueInput!, create: CopyrightCreateInput!, update: CopyrightUpdateInput!): Copyright!
  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!
  updateManyVoteReviews(data: VoteReviewUpdateManyMutationInput!, where: VoteReviewWhereInput): BatchPayload!
  updateManyPodcastStations(data: PodcastStationUpdateManyMutationInput!, where: PodcastStationWhereInput): BatchPayload!
  updateManyPodcastEpisodes(data: PodcastEpisodeUpdateManyMutationInput!, where: PodcastEpisodeWhereInput): BatchPayload!
  updateManyCategories(data: CategoryUpdateManyMutationInput!, where: CategoryWhereInput): BatchPayload!
  updateManyTags(data: TagUpdateManyMutationInput!, where: TagWhereInput): BatchPayload!
  updateManyCopyrights(data: CopyrightUpdateManyMutationInput!, where: CopyrightWhereInput): BatchPayload!
  deleteManyUsers(where: UserWhereInput): BatchPayload!
  deleteManyFollowRelations(where: FollowRelationWhereInput): BatchPayload!
  deleteManyVoteReviews(where: VoteReviewWhereInput): BatchPayload!
  deleteManyPodcastStations(where: PodcastStationWhereInput): BatchPayload!
  deleteManyPodcastEpisodes(where: PodcastEpisodeWhereInput): BatchPayload!
  deleteManyCategories(where: CategoryWhereInput): BatchPayload!
  deleteManyTags(where: TagWhereInput): BatchPayload!
  deleteManyCopyrights(where: CopyrightWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

enum Permission {
  USER
  CAN_VOTE
  CAN_CONTRIBUTE
  CAN_ADD_Podcast
  OWN_PODCAST
  ADMIN
}

type PodcastEpisode implements Node {
  id: ID!
  mp3: String!
  podcastStation: PodcastStation!
  episodeNubmer: Int!
  title: String!
  subtitle: String!
  description: String!
  text: String
  textType: PodcastTextType
  image: String
  category: Category
  tag(where: TagWhereInput, orderBy: TagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Tag!]
  publishDate: DateTime!
  duration: Int!
  upvotes: Int!
  downvotes: Int!
  reviews(where: VoteReviewWhereInput, orderBy: VoteReviewOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [VoteReview!]
}

"""A connection to a list of items."""
type PodcastEpisodeConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [PodcastEpisodeEdge]!
  aggregate: AggregatePodcastEpisode!
}

input PodcastEpisodeCreateInput {
  mp3: String!
  episodeNubmer: Int!
  title: String!
  subtitle: String!
  description: String!
  text: String
  textType: PodcastTextType
  image: String
  publishDate: DateTime!
  duration: Int!
  upvotes: Int
  downvotes: Int
  podcastStation: PodcastStationCreateOneWithoutEpisodesIdInput!
  category: CategoryCreateOneInput
  tag: TagCreateManyInput
  reviews: VoteReviewCreateManyWithoutEpisodeInput
}

input PodcastEpisodeCreateManyInput {
  create: [PodcastEpisodeCreateInput!]
  connect: [PodcastEpisodeWhereUniqueInput!]
}

input PodcastEpisodeCreateManyWithoutPodcastStationInput {
  create: [PodcastEpisodeCreateWithoutPodcastStationInput!]
  connect: [PodcastEpisodeWhereUniqueInput!]
}

input PodcastEpisodeCreateOneWithoutReviewsInput {
  create: PodcastEpisodeCreateWithoutReviewsInput
  connect: PodcastEpisodeWhereUniqueInput
}

input PodcastEpisodeCreateWithoutPodcastStationInput {
  mp3: String!
  episodeNubmer: Int!
  title: String!
  subtitle: String!
  description: String!
  text: String
  textType: PodcastTextType
  image: String
  publishDate: DateTime!
  duration: Int!
  upvotes: Int
  downvotes: Int
  category: CategoryCreateOneInput
  tag: TagCreateManyInput
  reviews: VoteReviewCreateManyWithoutEpisodeInput
}

input PodcastEpisodeCreateWithoutReviewsInput {
  mp3: String!
  episodeNubmer: Int!
  title: String!
  subtitle: String!
  description: String!
  text: String
  textType: PodcastTextType
  image: String
  publishDate: DateTime!
  duration: Int!
  upvotes: Int
  downvotes: Int
  podcastStation: PodcastStationCreateOneWithoutEpisodesIdInput!
  category: CategoryCreateOneInput
  tag: TagCreateManyInput
}

"""An edge in a connection."""
type PodcastEpisodeEdge {
  """The item at the end of the edge."""
  node: PodcastEpisode!

  """A cursor for use in pagination."""
  cursor: String!
}

enum PodcastEpisodeOrderByInput {
  id_ASC
  id_DESC
  mp3_ASC
  mp3_DESC
  episodeNubmer_ASC
  episodeNubmer_DESC
  title_ASC
  title_DESC
  subtitle_ASC
  subtitle_DESC
  description_ASC
  description_DESC
  text_ASC
  text_DESC
  textType_ASC
  textType_DESC
  image_ASC
  image_DESC
  publishDate_ASC
  publishDate_DESC
  duration_ASC
  duration_DESC
  upvotes_ASC
  upvotes_DESC
  downvotes_ASC
  downvotes_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type PodcastEpisodePreviousValues {
  id: ID!
  mp3: String!
  episodeNubmer: Int!
  title: String!
  subtitle: String!
  description: String!
  text: String
  textType: PodcastTextType
  image: String
  publishDate: DateTime!
  duration: Int!
  upvotes: Int!
  downvotes: Int!
}

input PodcastEpisodeScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [PodcastEpisodeScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [PodcastEpisodeScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PodcastEpisodeScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  mp3: String

  """All values that are not equal to given value."""
  mp3_not: String

  """All values that are contained in given list."""
  mp3_in: [String!]

  """All values that are not contained in given list."""
  mp3_not_in: [String!]

  """All values less than the given value."""
  mp3_lt: String

  """All values less than or equal the given value."""
  mp3_lte: String

  """All values greater than the given value."""
  mp3_gt: String

  """All values greater than or equal the given value."""
  mp3_gte: String

  """All values containing the given string."""
  mp3_contains: String

  """All values not containing the given string."""
  mp3_not_contains: String

  """All values starting with the given string."""
  mp3_starts_with: String

  """All values not starting with the given string."""
  mp3_not_starts_with: String

  """All values ending with the given string."""
  mp3_ends_with: String

  """All values not ending with the given string."""
  mp3_not_ends_with: String
  episodeNubmer: Int

  """All values that are not equal to given value."""
  episodeNubmer_not: Int

  """All values that are contained in given list."""
  episodeNubmer_in: [Int!]

  """All values that are not contained in given list."""
  episodeNubmer_not_in: [Int!]

  """All values less than the given value."""
  episodeNubmer_lt: Int

  """All values less than or equal the given value."""
  episodeNubmer_lte: Int

  """All values greater than the given value."""
  episodeNubmer_gt: Int

  """All values greater than or equal the given value."""
  episodeNubmer_gte: Int
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  subtitle: String

  """All values that are not equal to given value."""
  subtitle_not: String

  """All values that are contained in given list."""
  subtitle_in: [String!]

  """All values that are not contained in given list."""
  subtitle_not_in: [String!]

  """All values less than the given value."""
  subtitle_lt: String

  """All values less than or equal the given value."""
  subtitle_lte: String

  """All values greater than the given value."""
  subtitle_gt: String

  """All values greater than or equal the given value."""
  subtitle_gte: String

  """All values containing the given string."""
  subtitle_contains: String

  """All values not containing the given string."""
  subtitle_not_contains: String

  """All values starting with the given string."""
  subtitle_starts_with: String

  """All values not starting with the given string."""
  subtitle_not_starts_with: String

  """All values ending with the given string."""
  subtitle_ends_with: String

  """All values not ending with the given string."""
  subtitle_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  text: String

  """All values that are not equal to given value."""
  text_not: String

  """All values that are contained in given list."""
  text_in: [String!]

  """All values that are not contained in given list."""
  text_not_in: [String!]

  """All values less than the given value."""
  text_lt: String

  """All values less than or equal the given value."""
  text_lte: String

  """All values greater than the given value."""
  text_gt: String

  """All values greater than or equal the given value."""
  text_gte: String

  """All values containing the given string."""
  text_contains: String

  """All values not containing the given string."""
  text_not_contains: String

  """All values starting with the given string."""
  text_starts_with: String

  """All values not starting with the given string."""
  text_not_starts_with: String

  """All values ending with the given string."""
  text_ends_with: String

  """All values not ending with the given string."""
  text_not_ends_with: String
  textType: PodcastTextType

  """All values that are not equal to given value."""
  textType_not: PodcastTextType

  """All values that are contained in given list."""
  textType_in: [PodcastTextType!]

  """All values that are not contained in given list."""
  textType_not_in: [PodcastTextType!]
  image: String

  """All values that are not equal to given value."""
  image_not: String

  """All values that are contained in given list."""
  image_in: [String!]

  """All values that are not contained in given list."""
  image_not_in: [String!]

  """All values less than the given value."""
  image_lt: String

  """All values less than or equal the given value."""
  image_lte: String

  """All values greater than the given value."""
  image_gt: String

  """All values greater than or equal the given value."""
  image_gte: String

  """All values containing the given string."""
  image_contains: String

  """All values not containing the given string."""
  image_not_contains: String

  """All values starting with the given string."""
  image_starts_with: String

  """All values not starting with the given string."""
  image_not_starts_with: String

  """All values ending with the given string."""
  image_ends_with: String

  """All values not ending with the given string."""
  image_not_ends_with: String
  publishDate: DateTime

  """All values that are not equal to given value."""
  publishDate_not: DateTime

  """All values that are contained in given list."""
  publishDate_in: [DateTime!]

  """All values that are not contained in given list."""
  publishDate_not_in: [DateTime!]

  """All values less than the given value."""
  publishDate_lt: DateTime

  """All values less than or equal the given value."""
  publishDate_lte: DateTime

  """All values greater than the given value."""
  publishDate_gt: DateTime

  """All values greater than or equal the given value."""
  publishDate_gte: DateTime
  duration: Int

  """All values that are not equal to given value."""
  duration_not: Int

  """All values that are contained in given list."""
  duration_in: [Int!]

  """All values that are not contained in given list."""
  duration_not_in: [Int!]

  """All values less than the given value."""
  duration_lt: Int

  """All values less than or equal the given value."""
  duration_lte: Int

  """All values greater than the given value."""
  duration_gt: Int

  """All values greater than or equal the given value."""
  duration_gte: Int
  upvotes: Int

  """All values that are not equal to given value."""
  upvotes_not: Int

  """All values that are contained in given list."""
  upvotes_in: [Int!]

  """All values that are not contained in given list."""
  upvotes_not_in: [Int!]

  """All values less than the given value."""
  upvotes_lt: Int

  """All values less than or equal the given value."""
  upvotes_lte: Int

  """All values greater than the given value."""
  upvotes_gt: Int

  """All values greater than or equal the given value."""
  upvotes_gte: Int
  downvotes: Int

  """All values that are not equal to given value."""
  downvotes_not: Int

  """All values that are contained in given list."""
  downvotes_in: [Int!]

  """All values that are not contained in given list."""
  downvotes_not_in: [Int!]

  """All values less than the given value."""
  downvotes_lt: Int

  """All values less than or equal the given value."""
  downvotes_lte: Int

  """All values greater than the given value."""
  downvotes_gt: Int

  """All values greater than or equal the given value."""
  downvotes_gte: Int
}

type PodcastEpisodeSubscriptionPayload {
  mutation: MutationType!
  node: PodcastEpisode
  updatedFields: [String!]
  previousValues: PodcastEpisodePreviousValues
}

input PodcastEpisodeSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [PodcastEpisodeSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [PodcastEpisodeSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PodcastEpisodeSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: PodcastEpisodeWhereInput
}

input PodcastEpisodeUpdateDataInput {
  mp3: String
  episodeNubmer: Int
  title: String
  subtitle: String
  description: String
  text: String
  textType: PodcastTextType
  image: String
  publishDate: DateTime
  duration: Int
  upvotes: Int
  downvotes: Int
  podcastStation: PodcastStationUpdateOneRequiredWithoutEpisodesIdInput
  category: CategoryUpdateOneInput
  tag: TagUpdateManyInput
  reviews: VoteReviewUpdateManyWithoutEpisodeInput
}

input PodcastEpisodeUpdateInput {
  mp3: String
  episodeNubmer: Int
  title: String
  subtitle: String
  description: String
  text: String
  textType: PodcastTextType
  image: String
  publishDate: DateTime
  duration: Int
  upvotes: Int
  downvotes: Int
  podcastStation: PodcastStationUpdateOneRequiredWithoutEpisodesIdInput
  category: CategoryUpdateOneInput
  tag: TagUpdateManyInput
  reviews: VoteReviewUpdateManyWithoutEpisodeInput
}

input PodcastEpisodeUpdateManyDataInput {
  mp3: String
  episodeNubmer: Int
  title: String
  subtitle: String
  description: String
  text: String
  textType: PodcastTextType
  image: String
  publishDate: DateTime
  duration: Int
  upvotes: Int
  downvotes: Int
}

input PodcastEpisodeUpdateManyInput {
  create: [PodcastEpisodeCreateInput!]
  connect: [PodcastEpisodeWhereUniqueInput!]
  disconnect: [PodcastEpisodeWhereUniqueInput!]
  delete: [PodcastEpisodeWhereUniqueInput!]
  update: [PodcastEpisodeUpdateWithWhereUniqueNestedInput!]
  updateMany: [PodcastEpisodeUpdateManyWithWhereNestedInput!]
  deleteMany: [PodcastEpisodeScalarWhereInput!]
  upsert: [PodcastEpisodeUpsertWithWhereUniqueNestedInput!]
}

input PodcastEpisodeUpdateManyMutationInput {
  mp3: String
  episodeNubmer: Int
  title: String
  subtitle: String
  description: String
  text: String
  textType: PodcastTextType
  image: String
  publishDate: DateTime
  duration: Int
  upvotes: Int
  downvotes: Int
}

input PodcastEpisodeUpdateManyWithoutPodcastStationInput {
  create: [PodcastEpisodeCreateWithoutPodcastStationInput!]
  connect: [PodcastEpisodeWhereUniqueInput!]
  disconnect: [PodcastEpisodeWhereUniqueInput!]
  delete: [PodcastEpisodeWhereUniqueInput!]
  update: [PodcastEpisodeUpdateWithWhereUniqueWithoutPodcastStationInput!]
  updateMany: [PodcastEpisodeUpdateManyWithWhereNestedInput!]
  deleteMany: [PodcastEpisodeScalarWhereInput!]
  upsert: [PodcastEpisodeUpsertWithWhereUniqueWithoutPodcastStationInput!]
}

input PodcastEpisodeUpdateManyWithWhereNestedInput {
  where: PodcastEpisodeScalarWhereInput!
  data: PodcastEpisodeUpdateManyDataInput!
}

input PodcastEpisodeUpdateWithoutPodcastStationDataInput {
  mp3: String
  episodeNubmer: Int
  title: String
  subtitle: String
  description: String
  text: String
  textType: PodcastTextType
  image: String
  publishDate: DateTime
  duration: Int
  upvotes: Int
  downvotes: Int
  category: CategoryUpdateOneInput
  tag: TagUpdateManyInput
  reviews: VoteReviewUpdateManyWithoutEpisodeInput
}

input PodcastEpisodeUpdateWithWhereUniqueNestedInput {
  where: PodcastEpisodeWhereUniqueInput!
  data: PodcastEpisodeUpdateDataInput!
}

input PodcastEpisodeUpdateWithWhereUniqueWithoutPodcastStationInput {
  where: PodcastEpisodeWhereUniqueInput!
  data: PodcastEpisodeUpdateWithoutPodcastStationDataInput!
}

input PodcastEpisodeUpsertWithWhereUniqueNestedInput {
  where: PodcastEpisodeWhereUniqueInput!
  update: PodcastEpisodeUpdateDataInput!
  create: PodcastEpisodeCreateInput!
}

input PodcastEpisodeUpsertWithWhereUniqueWithoutPodcastStationInput {
  where: PodcastEpisodeWhereUniqueInput!
  update: PodcastEpisodeUpdateWithoutPodcastStationDataInput!
  create: PodcastEpisodeCreateWithoutPodcastStationInput!
}

input PodcastEpisodeWhereInput {
  """Logical AND on all given filters."""
  AND: [PodcastEpisodeWhereInput!]

  """Logical OR on all given filters."""
  OR: [PodcastEpisodeWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PodcastEpisodeWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  mp3: String

  """All values that are not equal to given value."""
  mp3_not: String

  """All values that are contained in given list."""
  mp3_in: [String!]

  """All values that are not contained in given list."""
  mp3_not_in: [String!]

  """All values less than the given value."""
  mp3_lt: String

  """All values less than or equal the given value."""
  mp3_lte: String

  """All values greater than the given value."""
  mp3_gt: String

  """All values greater than or equal the given value."""
  mp3_gte: String

  """All values containing the given string."""
  mp3_contains: String

  """All values not containing the given string."""
  mp3_not_contains: String

  """All values starting with the given string."""
  mp3_starts_with: String

  """All values not starting with the given string."""
  mp3_not_starts_with: String

  """All values ending with the given string."""
  mp3_ends_with: String

  """All values not ending with the given string."""
  mp3_not_ends_with: String
  episodeNubmer: Int

  """All values that are not equal to given value."""
  episodeNubmer_not: Int

  """All values that are contained in given list."""
  episodeNubmer_in: [Int!]

  """All values that are not contained in given list."""
  episodeNubmer_not_in: [Int!]

  """All values less than the given value."""
  episodeNubmer_lt: Int

  """All values less than or equal the given value."""
  episodeNubmer_lte: Int

  """All values greater than the given value."""
  episodeNubmer_gt: Int

  """All values greater than or equal the given value."""
  episodeNubmer_gte: Int
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  subtitle: String

  """All values that are not equal to given value."""
  subtitle_not: String

  """All values that are contained in given list."""
  subtitle_in: [String!]

  """All values that are not contained in given list."""
  subtitle_not_in: [String!]

  """All values less than the given value."""
  subtitle_lt: String

  """All values less than or equal the given value."""
  subtitle_lte: String

  """All values greater than the given value."""
  subtitle_gt: String

  """All values greater than or equal the given value."""
  subtitle_gte: String

  """All values containing the given string."""
  subtitle_contains: String

  """All values not containing the given string."""
  subtitle_not_contains: String

  """All values starting with the given string."""
  subtitle_starts_with: String

  """All values not starting with the given string."""
  subtitle_not_starts_with: String

  """All values ending with the given string."""
  subtitle_ends_with: String

  """All values not ending with the given string."""
  subtitle_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  text: String

  """All values that are not equal to given value."""
  text_not: String

  """All values that are contained in given list."""
  text_in: [String!]

  """All values that are not contained in given list."""
  text_not_in: [String!]

  """All values less than the given value."""
  text_lt: String

  """All values less than or equal the given value."""
  text_lte: String

  """All values greater than the given value."""
  text_gt: String

  """All values greater than or equal the given value."""
  text_gte: String

  """All values containing the given string."""
  text_contains: String

  """All values not containing the given string."""
  text_not_contains: String

  """All values starting with the given string."""
  text_starts_with: String

  """All values not starting with the given string."""
  text_not_starts_with: String

  """All values ending with the given string."""
  text_ends_with: String

  """All values not ending with the given string."""
  text_not_ends_with: String
  textType: PodcastTextType

  """All values that are not equal to given value."""
  textType_not: PodcastTextType

  """All values that are contained in given list."""
  textType_in: [PodcastTextType!]

  """All values that are not contained in given list."""
  textType_not_in: [PodcastTextType!]
  image: String

  """All values that are not equal to given value."""
  image_not: String

  """All values that are contained in given list."""
  image_in: [String!]

  """All values that are not contained in given list."""
  image_not_in: [String!]

  """All values less than the given value."""
  image_lt: String

  """All values less than or equal the given value."""
  image_lte: String

  """All values greater than the given value."""
  image_gt: String

  """All values greater than or equal the given value."""
  image_gte: String

  """All values containing the given string."""
  image_contains: String

  """All values not containing the given string."""
  image_not_contains: String

  """All values starting with the given string."""
  image_starts_with: String

  """All values not starting with the given string."""
  image_not_starts_with: String

  """All values ending with the given string."""
  image_ends_with: String

  """All values not ending with the given string."""
  image_not_ends_with: String
  publishDate: DateTime

  """All values that are not equal to given value."""
  publishDate_not: DateTime

  """All values that are contained in given list."""
  publishDate_in: [DateTime!]

  """All values that are not contained in given list."""
  publishDate_not_in: [DateTime!]

  """All values less than the given value."""
  publishDate_lt: DateTime

  """All values less than or equal the given value."""
  publishDate_lte: DateTime

  """All values greater than the given value."""
  publishDate_gt: DateTime

  """All values greater than or equal the given value."""
  publishDate_gte: DateTime
  duration: Int

  """All values that are not equal to given value."""
  duration_not: Int

  """All values that are contained in given list."""
  duration_in: [Int!]

  """All values that are not contained in given list."""
  duration_not_in: [Int!]

  """All values less than the given value."""
  duration_lt: Int

  """All values less than or equal the given value."""
  duration_lte: Int

  """All values greater than the given value."""
  duration_gt: Int

  """All values greater than or equal the given value."""
  duration_gte: Int
  upvotes: Int

  """All values that are not equal to given value."""
  upvotes_not: Int

  """All values that are contained in given list."""
  upvotes_in: [Int!]

  """All values that are not contained in given list."""
  upvotes_not_in: [Int!]

  """All values less than the given value."""
  upvotes_lt: Int

  """All values less than or equal the given value."""
  upvotes_lte: Int

  """All values greater than the given value."""
  upvotes_gt: Int

  """All values greater than or equal the given value."""
  upvotes_gte: Int
  downvotes: Int

  """All values that are not equal to given value."""
  downvotes_not: Int

  """All values that are contained in given list."""
  downvotes_in: [Int!]

  """All values that are not contained in given list."""
  downvotes_not_in: [Int!]

  """All values less than the given value."""
  downvotes_lt: Int

  """All values less than or equal the given value."""
  downvotes_lte: Int

  """All values greater than the given value."""
  downvotes_gt: Int

  """All values greater than or equal the given value."""
  downvotes_gte: Int
  podcastStation: PodcastStationWhereInput
  category: CategoryWhereInput
  tag_every: TagWhereInput
  tag_some: TagWhereInput
  tag_none: TagWhereInput
  reviews_every: VoteReviewWhereInput
  reviews_some: VoteReviewWhereInput
  reviews_none: VoteReviewWhereInput
}

input PodcastEpisodeWhereUniqueInput {
  id: ID
}

type PodcastStation implements Node {
  id: ID!
  slug: String!
  rss: String!
  pending: Boolean!
  title: String!
  subtitle: String!
  description: String!
  website: String
  links: [String!]!
  language: String!
  subscribers: User!
  subscribedCount: Int!
  image: String
  largeImage: String
  category: Category
  tag(where: TagWhereInput, orderBy: TagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Tag!]
  copyright: Copyright
  author: User!
  episodesId(where: PodcastEpisodeWhereInput, orderBy: PodcastEpisodeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PodcastEpisode!]
  latestEpisode: Int!
  upvotes: Int!
  downvotes: Int!
  reviews(where: VoteReviewWhereInput, orderBy: VoteReviewOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [VoteReview!]
  unProcessedFeed: Json
}

"""A connection to a list of items."""
type PodcastStationConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [PodcastStationEdge]!
  aggregate: AggregatePodcastStation!
}

input PodcastStationCreateInput {
  slug: String!
  rss: String!
  pending: Boolean
  title: String!
  subtitle: String!
  description: String!
  website: String
  language: String
  subscribedCount: Int
  image: String
  largeImage: String
  latestEpisode: Int
  upvotes: Int
  downvotes: Int
  unProcessedFeed: Json
  links: PodcastStationCreatelinksInput
  subscribers: UserCreateOneWithoutSubscribesInput!
  category: CategoryCreateOneInput
  tag: TagCreateManyInput
  copyright: CopyrightCreateOneInput
  author: UserCreateOneWithoutOwnsInput!
  episodesId: PodcastEpisodeCreateManyWithoutPodcastStationInput
  reviews: VoteReviewCreateManyWithoutPodcastStationInput
}

input PodcastStationCreatelinksInput {
  set: [String!]
}

input PodcastStationCreateManyWithoutAuthorInput {
  create: [PodcastStationCreateWithoutAuthorInput!]
  connect: [PodcastStationWhereUniqueInput!]
}

input PodcastStationCreateManyWithoutSubscribersInput {
  create: [PodcastStationCreateWithoutSubscribersInput!]
  connect: [PodcastStationWhereUniqueInput!]
}

input PodcastStationCreateOneWithoutEpisodesIdInput {
  create: PodcastStationCreateWithoutEpisodesIdInput
  connect: PodcastStationWhereUniqueInput
}

input PodcastStationCreateOneWithoutReviewsInput {
  create: PodcastStationCreateWithoutReviewsInput
  connect: PodcastStationWhereUniqueInput
}

input PodcastStationCreateWithoutAuthorInput {
  slug: String!
  rss: String!
  pending: Boolean
  title: String!
  subtitle: String!
  description: String!
  website: String
  language: String
  subscribedCount: Int
  image: String
  largeImage: String
  latestEpisode: Int
  upvotes: Int
  downvotes: Int
  unProcessedFeed: Json
  links: PodcastStationCreatelinksInput
  subscribers: UserCreateOneWithoutSubscribesInput!
  category: CategoryCreateOneInput
  tag: TagCreateManyInput
  copyright: CopyrightCreateOneInput
  episodesId: PodcastEpisodeCreateManyWithoutPodcastStationInput
  reviews: VoteReviewCreateManyWithoutPodcastStationInput
}

input PodcastStationCreateWithoutEpisodesIdInput {
  slug: String!
  rss: String!
  pending: Boolean
  title: String!
  subtitle: String!
  description: String!
  website: String
  language: String
  subscribedCount: Int
  image: String
  largeImage: String
  latestEpisode: Int
  upvotes: Int
  downvotes: Int
  unProcessedFeed: Json
  links: PodcastStationCreatelinksInput
  subscribers: UserCreateOneWithoutSubscribesInput!
  category: CategoryCreateOneInput
  tag: TagCreateManyInput
  copyright: CopyrightCreateOneInput
  author: UserCreateOneWithoutOwnsInput!
  reviews: VoteReviewCreateManyWithoutPodcastStationInput
}

input PodcastStationCreateWithoutReviewsInput {
  slug: String!
  rss: String!
  pending: Boolean
  title: String!
  subtitle: String!
  description: String!
  website: String
  language: String
  subscribedCount: Int
  image: String
  largeImage: String
  latestEpisode: Int
  upvotes: Int
  downvotes: Int
  unProcessedFeed: Json
  links: PodcastStationCreatelinksInput
  subscribers: UserCreateOneWithoutSubscribesInput!
  category: CategoryCreateOneInput
  tag: TagCreateManyInput
  copyright: CopyrightCreateOneInput
  author: UserCreateOneWithoutOwnsInput!
  episodesId: PodcastEpisodeCreateManyWithoutPodcastStationInput
}

input PodcastStationCreateWithoutSubscribersInput {
  slug: String!
  rss: String!
  pending: Boolean
  title: String!
  subtitle: String!
  description: String!
  website: String
  language: String
  subscribedCount: Int
  image: String
  largeImage: String
  latestEpisode: Int
  upvotes: Int
  downvotes: Int
  unProcessedFeed: Json
  links: PodcastStationCreatelinksInput
  category: CategoryCreateOneInput
  tag: TagCreateManyInput
  copyright: CopyrightCreateOneInput
  author: UserCreateOneWithoutOwnsInput!
  episodesId: PodcastEpisodeCreateManyWithoutPodcastStationInput
  reviews: VoteReviewCreateManyWithoutPodcastStationInput
}

"""An edge in a connection."""
type PodcastStationEdge {
  """The item at the end of the edge."""
  node: PodcastStation!

  """A cursor for use in pagination."""
  cursor: String!
}

enum PodcastStationOrderByInput {
  id_ASC
  id_DESC
  slug_ASC
  slug_DESC
  rss_ASC
  rss_DESC
  pending_ASC
  pending_DESC
  title_ASC
  title_DESC
  subtitle_ASC
  subtitle_DESC
  description_ASC
  description_DESC
  website_ASC
  website_DESC
  language_ASC
  language_DESC
  subscribedCount_ASC
  subscribedCount_DESC
  image_ASC
  image_DESC
  largeImage_ASC
  largeImage_DESC
  latestEpisode_ASC
  latestEpisode_DESC
  upvotes_ASC
  upvotes_DESC
  downvotes_ASC
  downvotes_DESC
  unProcessedFeed_ASC
  unProcessedFeed_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type PodcastStationPreviousValues {
  id: ID!
  slug: String!
  rss: String!
  pending: Boolean!
  title: String!
  subtitle: String!
  description: String!
  website: String
  links: [String!]!
  language: String!
  subscribedCount: Int!
  image: String
  largeImage: String
  latestEpisode: Int!
  upvotes: Int!
  downvotes: Int!
  unProcessedFeed: Json
}

input PodcastStationScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [PodcastStationScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [PodcastStationScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PodcastStationScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  slug: String

  """All values that are not equal to given value."""
  slug_not: String

  """All values that are contained in given list."""
  slug_in: [String!]

  """All values that are not contained in given list."""
  slug_not_in: [String!]

  """All values less than the given value."""
  slug_lt: String

  """All values less than or equal the given value."""
  slug_lte: String

  """All values greater than the given value."""
  slug_gt: String

  """All values greater than or equal the given value."""
  slug_gte: String

  """All values containing the given string."""
  slug_contains: String

  """All values not containing the given string."""
  slug_not_contains: String

  """All values starting with the given string."""
  slug_starts_with: String

  """All values not starting with the given string."""
  slug_not_starts_with: String

  """All values ending with the given string."""
  slug_ends_with: String

  """All values not ending with the given string."""
  slug_not_ends_with: String
  rss: String

  """All values that are not equal to given value."""
  rss_not: String

  """All values that are contained in given list."""
  rss_in: [String!]

  """All values that are not contained in given list."""
  rss_not_in: [String!]

  """All values less than the given value."""
  rss_lt: String

  """All values less than or equal the given value."""
  rss_lte: String

  """All values greater than the given value."""
  rss_gt: String

  """All values greater than or equal the given value."""
  rss_gte: String

  """All values containing the given string."""
  rss_contains: String

  """All values not containing the given string."""
  rss_not_contains: String

  """All values starting with the given string."""
  rss_starts_with: String

  """All values not starting with the given string."""
  rss_not_starts_with: String

  """All values ending with the given string."""
  rss_ends_with: String

  """All values not ending with the given string."""
  rss_not_ends_with: String
  pending: Boolean

  """All values that are not equal to given value."""
  pending_not: Boolean
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  subtitle: String

  """All values that are not equal to given value."""
  subtitle_not: String

  """All values that are contained in given list."""
  subtitle_in: [String!]

  """All values that are not contained in given list."""
  subtitle_not_in: [String!]

  """All values less than the given value."""
  subtitle_lt: String

  """All values less than or equal the given value."""
  subtitle_lte: String

  """All values greater than the given value."""
  subtitle_gt: String

  """All values greater than or equal the given value."""
  subtitle_gte: String

  """All values containing the given string."""
  subtitle_contains: String

  """All values not containing the given string."""
  subtitle_not_contains: String

  """All values starting with the given string."""
  subtitle_starts_with: String

  """All values not starting with the given string."""
  subtitle_not_starts_with: String

  """All values ending with the given string."""
  subtitle_ends_with: String

  """All values not ending with the given string."""
  subtitle_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  website: String

  """All values that are not equal to given value."""
  website_not: String

  """All values that are contained in given list."""
  website_in: [String!]

  """All values that are not contained in given list."""
  website_not_in: [String!]

  """All values less than the given value."""
  website_lt: String

  """All values less than or equal the given value."""
  website_lte: String

  """All values greater than the given value."""
  website_gt: String

  """All values greater than or equal the given value."""
  website_gte: String

  """All values containing the given string."""
  website_contains: String

  """All values not containing the given string."""
  website_not_contains: String

  """All values starting with the given string."""
  website_starts_with: String

  """All values not starting with the given string."""
  website_not_starts_with: String

  """All values ending with the given string."""
  website_ends_with: String

  """All values not ending with the given string."""
  website_not_ends_with: String
  language: String

  """All values that are not equal to given value."""
  language_not: String

  """All values that are contained in given list."""
  language_in: [String!]

  """All values that are not contained in given list."""
  language_not_in: [String!]

  """All values less than the given value."""
  language_lt: String

  """All values less than or equal the given value."""
  language_lte: String

  """All values greater than the given value."""
  language_gt: String

  """All values greater than or equal the given value."""
  language_gte: String

  """All values containing the given string."""
  language_contains: String

  """All values not containing the given string."""
  language_not_contains: String

  """All values starting with the given string."""
  language_starts_with: String

  """All values not starting with the given string."""
  language_not_starts_with: String

  """All values ending with the given string."""
  language_ends_with: String

  """All values not ending with the given string."""
  language_not_ends_with: String
  subscribedCount: Int

  """All values that are not equal to given value."""
  subscribedCount_not: Int

  """All values that are contained in given list."""
  subscribedCount_in: [Int!]

  """All values that are not contained in given list."""
  subscribedCount_not_in: [Int!]

  """All values less than the given value."""
  subscribedCount_lt: Int

  """All values less than or equal the given value."""
  subscribedCount_lte: Int

  """All values greater than the given value."""
  subscribedCount_gt: Int

  """All values greater than or equal the given value."""
  subscribedCount_gte: Int
  image: String

  """All values that are not equal to given value."""
  image_not: String

  """All values that are contained in given list."""
  image_in: [String!]

  """All values that are not contained in given list."""
  image_not_in: [String!]

  """All values less than the given value."""
  image_lt: String

  """All values less than or equal the given value."""
  image_lte: String

  """All values greater than the given value."""
  image_gt: String

  """All values greater than or equal the given value."""
  image_gte: String

  """All values containing the given string."""
  image_contains: String

  """All values not containing the given string."""
  image_not_contains: String

  """All values starting with the given string."""
  image_starts_with: String

  """All values not starting with the given string."""
  image_not_starts_with: String

  """All values ending with the given string."""
  image_ends_with: String

  """All values not ending with the given string."""
  image_not_ends_with: String
  largeImage: String

  """All values that are not equal to given value."""
  largeImage_not: String

  """All values that are contained in given list."""
  largeImage_in: [String!]

  """All values that are not contained in given list."""
  largeImage_not_in: [String!]

  """All values less than the given value."""
  largeImage_lt: String

  """All values less than or equal the given value."""
  largeImage_lte: String

  """All values greater than the given value."""
  largeImage_gt: String

  """All values greater than or equal the given value."""
  largeImage_gte: String

  """All values containing the given string."""
  largeImage_contains: String

  """All values not containing the given string."""
  largeImage_not_contains: String

  """All values starting with the given string."""
  largeImage_starts_with: String

  """All values not starting with the given string."""
  largeImage_not_starts_with: String

  """All values ending with the given string."""
  largeImage_ends_with: String

  """All values not ending with the given string."""
  largeImage_not_ends_with: String
  latestEpisode: Int

  """All values that are not equal to given value."""
  latestEpisode_not: Int

  """All values that are contained in given list."""
  latestEpisode_in: [Int!]

  """All values that are not contained in given list."""
  latestEpisode_not_in: [Int!]

  """All values less than the given value."""
  latestEpisode_lt: Int

  """All values less than or equal the given value."""
  latestEpisode_lte: Int

  """All values greater than the given value."""
  latestEpisode_gt: Int

  """All values greater than or equal the given value."""
  latestEpisode_gte: Int
  upvotes: Int

  """All values that are not equal to given value."""
  upvotes_not: Int

  """All values that are contained in given list."""
  upvotes_in: [Int!]

  """All values that are not contained in given list."""
  upvotes_not_in: [Int!]

  """All values less than the given value."""
  upvotes_lt: Int

  """All values less than or equal the given value."""
  upvotes_lte: Int

  """All values greater than the given value."""
  upvotes_gt: Int

  """All values greater than or equal the given value."""
  upvotes_gte: Int
  downvotes: Int

  """All values that are not equal to given value."""
  downvotes_not: Int

  """All values that are contained in given list."""
  downvotes_in: [Int!]

  """All values that are not contained in given list."""
  downvotes_not_in: [Int!]

  """All values less than the given value."""
  downvotes_lt: Int

  """All values less than or equal the given value."""
  downvotes_lte: Int

  """All values greater than the given value."""
  downvotes_gt: Int

  """All values greater than or equal the given value."""
  downvotes_gte: Int
}

type PodcastStationSubscriptionPayload {
  mutation: MutationType!
  node: PodcastStation
  updatedFields: [String!]
  previousValues: PodcastStationPreviousValues
}

input PodcastStationSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [PodcastStationSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [PodcastStationSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PodcastStationSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: PodcastStationWhereInput
}

input PodcastStationUpdateInput {
  slug: String
  rss: String
  pending: Boolean
  title: String
  subtitle: String
  description: String
  website: String
  language: String
  subscribedCount: Int
  image: String
  largeImage: String
  latestEpisode: Int
  upvotes: Int
  downvotes: Int
  unProcessedFeed: Json
  links: PodcastStationUpdatelinksInput
  subscribers: UserUpdateOneRequiredWithoutSubscribesInput
  category: CategoryUpdateOneInput
  tag: TagUpdateManyInput
  copyright: CopyrightUpdateOneInput
  author: UserUpdateOneRequiredWithoutOwnsInput
  episodesId: PodcastEpisodeUpdateManyWithoutPodcastStationInput
  reviews: VoteReviewUpdateManyWithoutPodcastStationInput
}

input PodcastStationUpdatelinksInput {
  set: [String!]
}

input PodcastStationUpdateManyDataInput {
  slug: String
  rss: String
  pending: Boolean
  title: String
  subtitle: String
  description: String
  website: String
  language: String
  subscribedCount: Int
  image: String
  largeImage: String
  latestEpisode: Int
  upvotes: Int
  downvotes: Int
  unProcessedFeed: Json
  links: PodcastStationUpdatelinksInput
}

input PodcastStationUpdateManyMutationInput {
  slug: String
  rss: String
  pending: Boolean
  title: String
  subtitle: String
  description: String
  website: String
  language: String
  subscribedCount: Int
  image: String
  largeImage: String
  latestEpisode: Int
  upvotes: Int
  downvotes: Int
  unProcessedFeed: Json
  links: PodcastStationUpdatelinksInput
}

input PodcastStationUpdateManyWithoutAuthorInput {
  create: [PodcastStationCreateWithoutAuthorInput!]
  connect: [PodcastStationWhereUniqueInput!]
  disconnect: [PodcastStationWhereUniqueInput!]
  delete: [PodcastStationWhereUniqueInput!]
  update: [PodcastStationUpdateWithWhereUniqueWithoutAuthorInput!]
  updateMany: [PodcastStationUpdateManyWithWhereNestedInput!]
  deleteMany: [PodcastStationScalarWhereInput!]
  upsert: [PodcastStationUpsertWithWhereUniqueWithoutAuthorInput!]
}

input PodcastStationUpdateManyWithoutSubscribersInput {
  create: [PodcastStationCreateWithoutSubscribersInput!]
  connect: [PodcastStationWhereUniqueInput!]
  disconnect: [PodcastStationWhereUniqueInput!]
  delete: [PodcastStationWhereUniqueInput!]
  update: [PodcastStationUpdateWithWhereUniqueWithoutSubscribersInput!]
  updateMany: [PodcastStationUpdateManyWithWhereNestedInput!]
  deleteMany: [PodcastStationScalarWhereInput!]
  upsert: [PodcastStationUpsertWithWhereUniqueWithoutSubscribersInput!]
}

input PodcastStationUpdateManyWithWhereNestedInput {
  where: PodcastStationScalarWhereInput!
  data: PodcastStationUpdateManyDataInput!
}

input PodcastStationUpdateOneRequiredWithoutEpisodesIdInput {
  create: PodcastStationCreateWithoutEpisodesIdInput
  connect: PodcastStationWhereUniqueInput
  update: PodcastStationUpdateWithoutEpisodesIdDataInput
  upsert: PodcastStationUpsertWithoutEpisodesIdInput
}

input PodcastStationUpdateWithoutAuthorDataInput {
  slug: String
  rss: String
  pending: Boolean
  title: String
  subtitle: String
  description: String
  website: String
  language: String
  subscribedCount: Int
  image: String
  largeImage: String
  latestEpisode: Int
  upvotes: Int
  downvotes: Int
  unProcessedFeed: Json
  links: PodcastStationUpdatelinksInput
  subscribers: UserUpdateOneRequiredWithoutSubscribesInput
  category: CategoryUpdateOneInput
  tag: TagUpdateManyInput
  copyright: CopyrightUpdateOneInput
  episodesId: PodcastEpisodeUpdateManyWithoutPodcastStationInput
  reviews: VoteReviewUpdateManyWithoutPodcastStationInput
}

input PodcastStationUpdateWithoutEpisodesIdDataInput {
  slug: String
  rss: String
  pending: Boolean
  title: String
  subtitle: String
  description: String
  website: String
  language: String
  subscribedCount: Int
  image: String
  largeImage: String
  latestEpisode: Int
  upvotes: Int
  downvotes: Int
  unProcessedFeed: Json
  links: PodcastStationUpdatelinksInput
  subscribers: UserUpdateOneRequiredWithoutSubscribesInput
  category: CategoryUpdateOneInput
  tag: TagUpdateManyInput
  copyright: CopyrightUpdateOneInput
  author: UserUpdateOneRequiredWithoutOwnsInput
  reviews: VoteReviewUpdateManyWithoutPodcastStationInput
}

input PodcastStationUpdateWithoutSubscribersDataInput {
  slug: String
  rss: String
  pending: Boolean
  title: String
  subtitle: String
  description: String
  website: String
  language: String
  subscribedCount: Int
  image: String
  largeImage: String
  latestEpisode: Int
  upvotes: Int
  downvotes: Int
  unProcessedFeed: Json
  links: PodcastStationUpdatelinksInput
  category: CategoryUpdateOneInput
  tag: TagUpdateManyInput
  copyright: CopyrightUpdateOneInput
  author: UserUpdateOneRequiredWithoutOwnsInput
  episodesId: PodcastEpisodeUpdateManyWithoutPodcastStationInput
  reviews: VoteReviewUpdateManyWithoutPodcastStationInput
}

input PodcastStationUpdateWithWhereUniqueWithoutAuthorInput {
  where: PodcastStationWhereUniqueInput!
  data: PodcastStationUpdateWithoutAuthorDataInput!
}

input PodcastStationUpdateWithWhereUniqueWithoutSubscribersInput {
  where: PodcastStationWhereUniqueInput!
  data: PodcastStationUpdateWithoutSubscribersDataInput!
}

input PodcastStationUpsertWithoutEpisodesIdInput {
  update: PodcastStationUpdateWithoutEpisodesIdDataInput!
  create: PodcastStationCreateWithoutEpisodesIdInput!
}

input PodcastStationUpsertWithWhereUniqueWithoutAuthorInput {
  where: PodcastStationWhereUniqueInput!
  update: PodcastStationUpdateWithoutAuthorDataInput!
  create: PodcastStationCreateWithoutAuthorInput!
}

input PodcastStationUpsertWithWhereUniqueWithoutSubscribersInput {
  where: PodcastStationWhereUniqueInput!
  update: PodcastStationUpdateWithoutSubscribersDataInput!
  create: PodcastStationCreateWithoutSubscribersInput!
}

input PodcastStationWhereInput {
  """Logical AND on all given filters."""
  AND: [PodcastStationWhereInput!]

  """Logical OR on all given filters."""
  OR: [PodcastStationWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PodcastStationWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  slug: String

  """All values that are not equal to given value."""
  slug_not: String

  """All values that are contained in given list."""
  slug_in: [String!]

  """All values that are not contained in given list."""
  slug_not_in: [String!]

  """All values less than the given value."""
  slug_lt: String

  """All values less than or equal the given value."""
  slug_lte: String

  """All values greater than the given value."""
  slug_gt: String

  """All values greater than or equal the given value."""
  slug_gte: String

  """All values containing the given string."""
  slug_contains: String

  """All values not containing the given string."""
  slug_not_contains: String

  """All values starting with the given string."""
  slug_starts_with: String

  """All values not starting with the given string."""
  slug_not_starts_with: String

  """All values ending with the given string."""
  slug_ends_with: String

  """All values not ending with the given string."""
  slug_not_ends_with: String
  rss: String

  """All values that are not equal to given value."""
  rss_not: String

  """All values that are contained in given list."""
  rss_in: [String!]

  """All values that are not contained in given list."""
  rss_not_in: [String!]

  """All values less than the given value."""
  rss_lt: String

  """All values less than or equal the given value."""
  rss_lte: String

  """All values greater than the given value."""
  rss_gt: String

  """All values greater than or equal the given value."""
  rss_gte: String

  """All values containing the given string."""
  rss_contains: String

  """All values not containing the given string."""
  rss_not_contains: String

  """All values starting with the given string."""
  rss_starts_with: String

  """All values not starting with the given string."""
  rss_not_starts_with: String

  """All values ending with the given string."""
  rss_ends_with: String

  """All values not ending with the given string."""
  rss_not_ends_with: String
  pending: Boolean

  """All values that are not equal to given value."""
  pending_not: Boolean
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  subtitle: String

  """All values that are not equal to given value."""
  subtitle_not: String

  """All values that are contained in given list."""
  subtitle_in: [String!]

  """All values that are not contained in given list."""
  subtitle_not_in: [String!]

  """All values less than the given value."""
  subtitle_lt: String

  """All values less than or equal the given value."""
  subtitle_lte: String

  """All values greater than the given value."""
  subtitle_gt: String

  """All values greater than or equal the given value."""
  subtitle_gte: String

  """All values containing the given string."""
  subtitle_contains: String

  """All values not containing the given string."""
  subtitle_not_contains: String

  """All values starting with the given string."""
  subtitle_starts_with: String

  """All values not starting with the given string."""
  subtitle_not_starts_with: String

  """All values ending with the given string."""
  subtitle_ends_with: String

  """All values not ending with the given string."""
  subtitle_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  website: String

  """All values that are not equal to given value."""
  website_not: String

  """All values that are contained in given list."""
  website_in: [String!]

  """All values that are not contained in given list."""
  website_not_in: [String!]

  """All values less than the given value."""
  website_lt: String

  """All values less than or equal the given value."""
  website_lte: String

  """All values greater than the given value."""
  website_gt: String

  """All values greater than or equal the given value."""
  website_gte: String

  """All values containing the given string."""
  website_contains: String

  """All values not containing the given string."""
  website_not_contains: String

  """All values starting with the given string."""
  website_starts_with: String

  """All values not starting with the given string."""
  website_not_starts_with: String

  """All values ending with the given string."""
  website_ends_with: String

  """All values not ending with the given string."""
  website_not_ends_with: String
  language: String

  """All values that are not equal to given value."""
  language_not: String

  """All values that are contained in given list."""
  language_in: [String!]

  """All values that are not contained in given list."""
  language_not_in: [String!]

  """All values less than the given value."""
  language_lt: String

  """All values less than or equal the given value."""
  language_lte: String

  """All values greater than the given value."""
  language_gt: String

  """All values greater than or equal the given value."""
  language_gte: String

  """All values containing the given string."""
  language_contains: String

  """All values not containing the given string."""
  language_not_contains: String

  """All values starting with the given string."""
  language_starts_with: String

  """All values not starting with the given string."""
  language_not_starts_with: String

  """All values ending with the given string."""
  language_ends_with: String

  """All values not ending with the given string."""
  language_not_ends_with: String
  subscribedCount: Int

  """All values that are not equal to given value."""
  subscribedCount_not: Int

  """All values that are contained in given list."""
  subscribedCount_in: [Int!]

  """All values that are not contained in given list."""
  subscribedCount_not_in: [Int!]

  """All values less than the given value."""
  subscribedCount_lt: Int

  """All values less than or equal the given value."""
  subscribedCount_lte: Int

  """All values greater than the given value."""
  subscribedCount_gt: Int

  """All values greater than or equal the given value."""
  subscribedCount_gte: Int
  image: String

  """All values that are not equal to given value."""
  image_not: String

  """All values that are contained in given list."""
  image_in: [String!]

  """All values that are not contained in given list."""
  image_not_in: [String!]

  """All values less than the given value."""
  image_lt: String

  """All values less than or equal the given value."""
  image_lte: String

  """All values greater than the given value."""
  image_gt: String

  """All values greater than or equal the given value."""
  image_gte: String

  """All values containing the given string."""
  image_contains: String

  """All values not containing the given string."""
  image_not_contains: String

  """All values starting with the given string."""
  image_starts_with: String

  """All values not starting with the given string."""
  image_not_starts_with: String

  """All values ending with the given string."""
  image_ends_with: String

  """All values not ending with the given string."""
  image_not_ends_with: String
  largeImage: String

  """All values that are not equal to given value."""
  largeImage_not: String

  """All values that are contained in given list."""
  largeImage_in: [String!]

  """All values that are not contained in given list."""
  largeImage_not_in: [String!]

  """All values less than the given value."""
  largeImage_lt: String

  """All values less than or equal the given value."""
  largeImage_lte: String

  """All values greater than the given value."""
  largeImage_gt: String

  """All values greater than or equal the given value."""
  largeImage_gte: String

  """All values containing the given string."""
  largeImage_contains: String

  """All values not containing the given string."""
  largeImage_not_contains: String

  """All values starting with the given string."""
  largeImage_starts_with: String

  """All values not starting with the given string."""
  largeImage_not_starts_with: String

  """All values ending with the given string."""
  largeImage_ends_with: String

  """All values not ending with the given string."""
  largeImage_not_ends_with: String
  latestEpisode: Int

  """All values that are not equal to given value."""
  latestEpisode_not: Int

  """All values that are contained in given list."""
  latestEpisode_in: [Int!]

  """All values that are not contained in given list."""
  latestEpisode_not_in: [Int!]

  """All values less than the given value."""
  latestEpisode_lt: Int

  """All values less than or equal the given value."""
  latestEpisode_lte: Int

  """All values greater than the given value."""
  latestEpisode_gt: Int

  """All values greater than or equal the given value."""
  latestEpisode_gte: Int
  upvotes: Int

  """All values that are not equal to given value."""
  upvotes_not: Int

  """All values that are contained in given list."""
  upvotes_in: [Int!]

  """All values that are not contained in given list."""
  upvotes_not_in: [Int!]

  """All values less than the given value."""
  upvotes_lt: Int

  """All values less than or equal the given value."""
  upvotes_lte: Int

  """All values greater than the given value."""
  upvotes_gt: Int

  """All values greater than or equal the given value."""
  upvotes_gte: Int
  downvotes: Int

  """All values that are not equal to given value."""
  downvotes_not: Int

  """All values that are contained in given list."""
  downvotes_in: [Int!]

  """All values that are not contained in given list."""
  downvotes_not_in: [Int!]

  """All values less than the given value."""
  downvotes_lt: Int

  """All values less than or equal the given value."""
  downvotes_lte: Int

  """All values greater than the given value."""
  downvotes_gt: Int

  """All values greater than or equal the given value."""
  downvotes_gte: Int
  subscribers: UserWhereInput
  category: CategoryWhereInput
  tag_every: TagWhereInput
  tag_some: TagWhereInput
  tag_none: TagWhereInput
  copyright: CopyrightWhereInput
  author: UserWhereInput
  episodesId_every: PodcastEpisodeWhereInput
  episodesId_some: PodcastEpisodeWhereInput
  episodesId_none: PodcastEpisodeWhereInput
  reviews_every: VoteReviewWhereInput
  reviews_some: VoteReviewWhereInput
  reviews_none: VoteReviewWhereInput
}

input PodcastStationWhereUniqueInput {
  id: ID
  slug: String
}

enum PodcastTextType {
  TEXT
  PARAGRAPH_TIMING
  SENTENCE_TIMING
  WORD_TIMING
}

type Query {
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  followRelations(where: FollowRelationWhereInput, orderBy: FollowRelationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [FollowRelation]!
  voteReviews(where: VoteReviewWhereInput, orderBy: VoteReviewOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [VoteReview]!
  podcastStations(where: PodcastStationWhereInput, orderBy: PodcastStationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PodcastStation]!
  podcastEpisodes(where: PodcastEpisodeWhereInput, orderBy: PodcastEpisodeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PodcastEpisode]!
  categories(where: CategoryWhereInput, orderBy: CategoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Category]!
  tags(where: TagWhereInput, orderBy: TagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Tag]!
  copyrights(where: CopyrightWhereInput, orderBy: CopyrightOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Copyright]!
  user(where: UserWhereUniqueInput!): User
  podcastStation(where: PodcastStationWhereUniqueInput!): PodcastStation
  podcastEpisode(where: PodcastEpisodeWhereUniqueInput!): PodcastEpisode
  category(where: CategoryWhereUniqueInput!): Category
  tag(where: TagWhereUniqueInput!): Tag
  copyright(where: CopyrightWhereUniqueInput!): Copyright
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!
  followRelationsConnection(where: FollowRelationWhereInput, orderBy: FollowRelationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): FollowRelationConnection!
  voteReviewsConnection(where: VoteReviewWhereInput, orderBy: VoteReviewOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): VoteReviewConnection!
  podcastStationsConnection(where: PodcastStationWhereInput, orderBy: PodcastStationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PodcastStationConnection!
  podcastEpisodesConnection(where: PodcastEpisodeWhereInput, orderBy: PodcastEpisodeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PodcastEpisodeConnection!
  categoriesConnection(where: CategoryWhereInput, orderBy: CategoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CategoryConnection!
  tagsConnection(where: TagWhereInput, orderBy: TagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TagConnection!
  copyrightsConnection(where: CopyrightWhereInput, orderBy: CopyrightOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CopyrightConnection!

  """Fetches an object given its ID"""
  node(
    """The ID of an object"""
    id: ID!
  ): Node
}

type Subscription {
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
  followRelation(where: FollowRelationSubscriptionWhereInput): FollowRelationSubscriptionPayload
  voteReview(where: VoteReviewSubscriptionWhereInput): VoteReviewSubscriptionPayload
  podcastStation(where: PodcastStationSubscriptionWhereInput): PodcastStationSubscriptionPayload
  podcastEpisode(where: PodcastEpisodeSubscriptionWhereInput): PodcastEpisodeSubscriptionPayload
  category(where: CategorySubscriptionWhereInput): CategorySubscriptionPayload
  tag(where: TagSubscriptionWhereInput): TagSubscriptionPayload
  copyright(where: CopyrightSubscriptionWhereInput): CopyrightSubscriptionPayload
}

type Tag implements Node {
  id: ID!
  title: String!
  category: Category
  count: Int
}

"""A connection to a list of items."""
type TagConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [TagEdge]!
  aggregate: AggregateTag!
}

input TagCreateInput {
  title: String!
  count: Int
  category: CategoryCreateOneInput
}

input TagCreateManyInput {
  create: [TagCreateInput!]
  connect: [TagWhereUniqueInput!]
}

"""An edge in a connection."""
type TagEdge {
  """The item at the end of the edge."""
  node: Tag!

  """A cursor for use in pagination."""
  cursor: String!
}

enum TagOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  count_ASC
  count_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type TagPreviousValues {
  id: ID!
  title: String!
  count: Int
}

input TagScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [TagScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [TagScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [TagScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  count: Int

  """All values that are not equal to given value."""
  count_not: Int

  """All values that are contained in given list."""
  count_in: [Int!]

  """All values that are not contained in given list."""
  count_not_in: [Int!]

  """All values less than the given value."""
  count_lt: Int

  """All values less than or equal the given value."""
  count_lte: Int

  """All values greater than the given value."""
  count_gt: Int

  """All values greater than or equal the given value."""
  count_gte: Int
}

type TagSubscriptionPayload {
  mutation: MutationType!
  node: Tag
  updatedFields: [String!]
  previousValues: TagPreviousValues
}

input TagSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [TagSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [TagSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [TagSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: TagWhereInput
}

input TagUpdateDataInput {
  title: String
  count: Int
  category: CategoryUpdateOneInput
}

input TagUpdateInput {
  title: String
  count: Int
  category: CategoryUpdateOneInput
}

input TagUpdateManyDataInput {
  title: String
  count: Int
}

input TagUpdateManyInput {
  create: [TagCreateInput!]
  connect: [TagWhereUniqueInput!]
  disconnect: [TagWhereUniqueInput!]
  delete: [TagWhereUniqueInput!]
  update: [TagUpdateWithWhereUniqueNestedInput!]
  updateMany: [TagUpdateManyWithWhereNestedInput!]
  deleteMany: [TagScalarWhereInput!]
  upsert: [TagUpsertWithWhereUniqueNestedInput!]
}

input TagUpdateManyMutationInput {
  title: String
  count: Int
}

input TagUpdateManyWithWhereNestedInput {
  where: TagScalarWhereInput!
  data: TagUpdateManyDataInput!
}

input TagUpdateWithWhereUniqueNestedInput {
  where: TagWhereUniqueInput!
  data: TagUpdateDataInput!
}

input TagUpsertWithWhereUniqueNestedInput {
  where: TagWhereUniqueInput!
  update: TagUpdateDataInput!
  create: TagCreateInput!
}

input TagWhereInput {
  """Logical AND on all given filters."""
  AND: [TagWhereInput!]

  """Logical OR on all given filters."""
  OR: [TagWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [TagWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  count: Int

  """All values that are not equal to given value."""
  count_not: Int

  """All values that are contained in given list."""
  count_in: [Int!]

  """All values that are not contained in given list."""
  count_not_in: [Int!]

  """All values less than the given value."""
  count_lt: Int

  """All values less than or equal the given value."""
  count_lte: Int

  """All values greater than the given value."""
  count_gt: Int

  """All values greater than or equal the given value."""
  count_gte: Int
  category: CategoryWhereInput
}

input TagWhereUniqueInput {
  id: ID
}

type User implements Node {
  id: ID!
  name: String!
  email: String!
  password: String!
  resetToken: String
  resetTokenExpiry: String
  subscribes(where: PodcastStationWhereInput, orderBy: PodcastStationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PodcastStation!]
  owns(where: PodcastStationWhereInput, orderBy: PodcastStationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PodcastStation!]
  votes(where: VoteReviewWhereInput, orderBy: VoteReviewOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [VoteReview!]
  permissions: [Permission!]!
  followerCount: Int
  folloingCount: Int
  followers(where: FollowRelationWhereInput, orderBy: FollowRelationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [FollowRelation!]
  following(where: FollowRelationWhereInput, orderBy: FollowRelationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [FollowRelation!]
  nowPlaying(where: PodcastEpisodeWhereInput, orderBy: PodcastEpisodeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PodcastEpisode!]
}

"""A connection to a list of items."""
type UserConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  name: String!
  email: String!
  password: String!
  resetToken: String
  resetTokenExpiry: String
  followerCount: Int
  folloingCount: Int
  permissions: UserCreatepermissionsInput
  subscribes: PodcastStationCreateManyWithoutSubscribersInput
  owns: PodcastStationCreateManyWithoutAuthorInput
  votes: VoteReviewCreateManyWithoutUserInput
  followers: FollowRelationCreateManyWithoutUserInput
  following: FollowRelationCreateManyWithoutFollowerInput
  nowPlaying: PodcastEpisodeCreateManyInput
}

input UserCreateOneWithoutFollowersInput {
  create: UserCreateWithoutFollowersInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutFollowingInput {
  create: UserCreateWithoutFollowingInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutOwnsInput {
  create: UserCreateWithoutOwnsInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutSubscribesInput {
  create: UserCreateWithoutSubscribesInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutVotesInput {
  create: UserCreateWithoutVotesInput
  connect: UserWhereUniqueInput
}

input UserCreatepermissionsInput {
  set: [Permission!]
}

input UserCreateWithoutFollowersInput {
  name: String!
  email: String!
  password: String!
  resetToken: String
  resetTokenExpiry: String
  followerCount: Int
  folloingCount: Int
  permissions: UserCreatepermissionsInput
  subscribes: PodcastStationCreateManyWithoutSubscribersInput
  owns: PodcastStationCreateManyWithoutAuthorInput
  votes: VoteReviewCreateManyWithoutUserInput
  following: FollowRelationCreateManyWithoutFollowerInput
  nowPlaying: PodcastEpisodeCreateManyInput
}

input UserCreateWithoutFollowingInput {
  name: String!
  email: String!
  password: String!
  resetToken: String
  resetTokenExpiry: String
  followerCount: Int
  folloingCount: Int
  permissions: UserCreatepermissionsInput
  subscribes: PodcastStationCreateManyWithoutSubscribersInput
  owns: PodcastStationCreateManyWithoutAuthorInput
  votes: VoteReviewCreateManyWithoutUserInput
  followers: FollowRelationCreateManyWithoutUserInput
  nowPlaying: PodcastEpisodeCreateManyInput
}

input UserCreateWithoutOwnsInput {
  name: String!
  email: String!
  password: String!
  resetToken: String
  resetTokenExpiry: String
  followerCount: Int
  folloingCount: Int
  permissions: UserCreatepermissionsInput
  subscribes: PodcastStationCreateManyWithoutSubscribersInput
  votes: VoteReviewCreateManyWithoutUserInput
  followers: FollowRelationCreateManyWithoutUserInput
  following: FollowRelationCreateManyWithoutFollowerInput
  nowPlaying: PodcastEpisodeCreateManyInput
}

input UserCreateWithoutSubscribesInput {
  name: String!
  email: String!
  password: String!
  resetToken: String
  resetTokenExpiry: String
  followerCount: Int
  folloingCount: Int
  permissions: UserCreatepermissionsInput
  owns: PodcastStationCreateManyWithoutAuthorInput
  votes: VoteReviewCreateManyWithoutUserInput
  followers: FollowRelationCreateManyWithoutUserInput
  following: FollowRelationCreateManyWithoutFollowerInput
  nowPlaying: PodcastEpisodeCreateManyInput
}

input UserCreateWithoutVotesInput {
  name: String!
  email: String!
  password: String!
  resetToken: String
  resetTokenExpiry: String
  followerCount: Int
  folloingCount: Int
  permissions: UserCreatepermissionsInput
  subscribes: PodcastStationCreateManyWithoutSubscribersInput
  owns: PodcastStationCreateManyWithoutAuthorInput
  followers: FollowRelationCreateManyWithoutUserInput
  following: FollowRelationCreateManyWithoutFollowerInput
  nowPlaying: PodcastEpisodeCreateManyInput
}

"""An edge in a connection."""
type UserEdge {
  """The item at the end of the edge."""
  node: User!

  """A cursor for use in pagination."""
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  email_ASC
  email_DESC
  password_ASC
  password_DESC
  resetToken_ASC
  resetToken_DESC
  resetTokenExpiry_ASC
  resetTokenExpiry_DESC
  followerCount_ASC
  followerCount_DESC
  folloingCount_ASC
  folloingCount_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type UserPreviousValues {
  id: ID!
  name: String!
  email: String!
  password: String!
  resetToken: String
  resetTokenExpiry: String
  permissions: [Permission!]!
  followerCount: Int
  folloingCount: Int
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [UserSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: UserWhereInput
}

input UserUpdateInput {
  name: String
  email: String
  password: String
  resetToken: String
  resetTokenExpiry: String
  followerCount: Int
  folloingCount: Int
  permissions: UserUpdatepermissionsInput
  subscribes: PodcastStationUpdateManyWithoutSubscribersInput
  owns: PodcastStationUpdateManyWithoutAuthorInput
  votes: VoteReviewUpdateManyWithoutUserInput
  followers: FollowRelationUpdateManyWithoutUserInput
  following: FollowRelationUpdateManyWithoutFollowerInput
  nowPlaying: PodcastEpisodeUpdateManyInput
}

input UserUpdateManyMutationInput {
  name: String
  email: String
  password: String
  resetToken: String
  resetTokenExpiry: String
  followerCount: Int
  folloingCount: Int
  permissions: UserUpdatepermissionsInput
}

input UserUpdateOneRequiredWithoutOwnsInput {
  create: UserCreateWithoutOwnsInput
  connect: UserWhereUniqueInput
  update: UserUpdateWithoutOwnsDataInput
  upsert: UserUpsertWithoutOwnsInput
}

input UserUpdateOneRequiredWithoutSubscribesInput {
  create: UserCreateWithoutSubscribesInput
  connect: UserWhereUniqueInput
  update: UserUpdateWithoutSubscribesDataInput
  upsert: UserUpsertWithoutSubscribesInput
}

input UserUpdatepermissionsInput {
  set: [Permission!]
}

input UserUpdateWithoutOwnsDataInput {
  name: String
  email: String
  password: String
  resetToken: String
  resetTokenExpiry: String
  followerCount: Int
  folloingCount: Int
  permissions: UserUpdatepermissionsInput
  subscribes: PodcastStationUpdateManyWithoutSubscribersInput
  votes: VoteReviewUpdateManyWithoutUserInput
  followers: FollowRelationUpdateManyWithoutUserInput
  following: FollowRelationUpdateManyWithoutFollowerInput
  nowPlaying: PodcastEpisodeUpdateManyInput
}

input UserUpdateWithoutSubscribesDataInput {
  name: String
  email: String
  password: String
  resetToken: String
  resetTokenExpiry: String
  followerCount: Int
  folloingCount: Int
  permissions: UserUpdatepermissionsInput
  owns: PodcastStationUpdateManyWithoutAuthorInput
  votes: VoteReviewUpdateManyWithoutUserInput
  followers: FollowRelationUpdateManyWithoutUserInput
  following: FollowRelationUpdateManyWithoutFollowerInput
  nowPlaying: PodcastEpisodeUpdateManyInput
}

input UserUpsertWithoutOwnsInput {
  update: UserUpdateWithoutOwnsDataInput!
  create: UserCreateWithoutOwnsInput!
}

input UserUpsertWithoutSubscribesInput {
  update: UserUpdateWithoutSubscribesDataInput!
  create: UserCreateWithoutSubscribesInput!
}

input UserWhereInput {
  """Logical AND on all given filters."""
  AND: [UserWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  email: String

  """All values that are not equal to given value."""
  email_not: String

  """All values that are contained in given list."""
  email_in: [String!]

  """All values that are not contained in given list."""
  email_not_in: [String!]

  """All values less than the given value."""
  email_lt: String

  """All values less than or equal the given value."""
  email_lte: String

  """All values greater than the given value."""
  email_gt: String

  """All values greater than or equal the given value."""
  email_gte: String

  """All values containing the given string."""
  email_contains: String

  """All values not containing the given string."""
  email_not_contains: String

  """All values starting with the given string."""
  email_starts_with: String

  """All values not starting with the given string."""
  email_not_starts_with: String

  """All values ending with the given string."""
  email_ends_with: String

  """All values not ending with the given string."""
  email_not_ends_with: String
  password: String

  """All values that are not equal to given value."""
  password_not: String

  """All values that are contained in given list."""
  password_in: [String!]

  """All values that are not contained in given list."""
  password_not_in: [String!]

  """All values less than the given value."""
  password_lt: String

  """All values less than or equal the given value."""
  password_lte: String

  """All values greater than the given value."""
  password_gt: String

  """All values greater than or equal the given value."""
  password_gte: String

  """All values containing the given string."""
  password_contains: String

  """All values not containing the given string."""
  password_not_contains: String

  """All values starting with the given string."""
  password_starts_with: String

  """All values not starting with the given string."""
  password_not_starts_with: String

  """All values ending with the given string."""
  password_ends_with: String

  """All values not ending with the given string."""
  password_not_ends_with: String
  resetToken: String

  """All values that are not equal to given value."""
  resetToken_not: String

  """All values that are contained in given list."""
  resetToken_in: [String!]

  """All values that are not contained in given list."""
  resetToken_not_in: [String!]

  """All values less than the given value."""
  resetToken_lt: String

  """All values less than or equal the given value."""
  resetToken_lte: String

  """All values greater than the given value."""
  resetToken_gt: String

  """All values greater than or equal the given value."""
  resetToken_gte: String

  """All values containing the given string."""
  resetToken_contains: String

  """All values not containing the given string."""
  resetToken_not_contains: String

  """All values starting with the given string."""
  resetToken_starts_with: String

  """All values not starting with the given string."""
  resetToken_not_starts_with: String

  """All values ending with the given string."""
  resetToken_ends_with: String

  """All values not ending with the given string."""
  resetToken_not_ends_with: String
  resetTokenExpiry: String

  """All values that are not equal to given value."""
  resetTokenExpiry_not: String

  """All values that are contained in given list."""
  resetTokenExpiry_in: [String!]

  """All values that are not contained in given list."""
  resetTokenExpiry_not_in: [String!]

  """All values less than the given value."""
  resetTokenExpiry_lt: String

  """All values less than or equal the given value."""
  resetTokenExpiry_lte: String

  """All values greater than the given value."""
  resetTokenExpiry_gt: String

  """All values greater than or equal the given value."""
  resetTokenExpiry_gte: String

  """All values containing the given string."""
  resetTokenExpiry_contains: String

  """All values not containing the given string."""
  resetTokenExpiry_not_contains: String

  """All values starting with the given string."""
  resetTokenExpiry_starts_with: String

  """All values not starting with the given string."""
  resetTokenExpiry_not_starts_with: String

  """All values ending with the given string."""
  resetTokenExpiry_ends_with: String

  """All values not ending with the given string."""
  resetTokenExpiry_not_ends_with: String
  followerCount: Int

  """All values that are not equal to given value."""
  followerCount_not: Int

  """All values that are contained in given list."""
  followerCount_in: [Int!]

  """All values that are not contained in given list."""
  followerCount_not_in: [Int!]

  """All values less than the given value."""
  followerCount_lt: Int

  """All values less than or equal the given value."""
  followerCount_lte: Int

  """All values greater than the given value."""
  followerCount_gt: Int

  """All values greater than or equal the given value."""
  followerCount_gte: Int
  folloingCount: Int

  """All values that are not equal to given value."""
  folloingCount_not: Int

  """All values that are contained in given list."""
  folloingCount_in: [Int!]

  """All values that are not contained in given list."""
  folloingCount_not_in: [Int!]

  """All values less than the given value."""
  folloingCount_lt: Int

  """All values less than or equal the given value."""
  folloingCount_lte: Int

  """All values greater than the given value."""
  folloingCount_gt: Int

  """All values greater than or equal the given value."""
  folloingCount_gte: Int
  subscribes_every: PodcastStationWhereInput
  subscribes_some: PodcastStationWhereInput
  subscribes_none: PodcastStationWhereInput
  owns_every: PodcastStationWhereInput
  owns_some: PodcastStationWhereInput
  owns_none: PodcastStationWhereInput
  votes_every: VoteReviewWhereInput
  votes_some: VoteReviewWhereInput
  votes_none: VoteReviewWhereInput
  followers_every: FollowRelationWhereInput
  followers_some: FollowRelationWhereInput
  followers_none: FollowRelationWhereInput
  following_every: FollowRelationWhereInput
  following_some: FollowRelationWhereInput
  following_none: FollowRelationWhereInput
  nowPlaying_every: PodcastEpisodeWhereInput
  nowPlaying_some: PodcastEpisodeWhereInput
  nowPlaying_none: PodcastEpisodeWhereInput
}

input UserWhereUniqueInput {
  id: ID
  email: String
}

enum VoteObject {
  STATION
  EPISODE
}

type VoteReview {
  user: User!
  podcastStation: PodcastStation
  episode: PodcastEpisode
  voteObject: VoteObject!
  voteType: VoteType!
  text: String
}

"""A connection to a list of items."""
type VoteReviewConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [VoteReviewEdge]!
  aggregate: AggregateVoteReview!
}

input VoteReviewCreateInput {
  voteObject: VoteObject!
  voteType: VoteType!
  text: String
  user: UserCreateOneWithoutVotesInput!
  podcastStation: PodcastStationCreateOneWithoutReviewsInput
  episode: PodcastEpisodeCreateOneWithoutReviewsInput
}

input VoteReviewCreateManyWithoutEpisodeInput {
  create: [VoteReviewCreateWithoutEpisodeInput!]
}

input VoteReviewCreateManyWithoutPodcastStationInput {
  create: [VoteReviewCreateWithoutPodcastStationInput!]
}

input VoteReviewCreateManyWithoutUserInput {
  create: [VoteReviewCreateWithoutUserInput!]
}

input VoteReviewCreateWithoutEpisodeInput {
  voteObject: VoteObject!
  voteType: VoteType!
  text: String
  user: UserCreateOneWithoutVotesInput!
  podcastStation: PodcastStationCreateOneWithoutReviewsInput
}

input VoteReviewCreateWithoutPodcastStationInput {
  voteObject: VoteObject!
  voteType: VoteType!
  text: String
  user: UserCreateOneWithoutVotesInput!
  episode: PodcastEpisodeCreateOneWithoutReviewsInput
}

input VoteReviewCreateWithoutUserInput {
  voteObject: VoteObject!
  voteType: VoteType!
  text: String
  podcastStation: PodcastStationCreateOneWithoutReviewsInput
  episode: PodcastEpisodeCreateOneWithoutReviewsInput
}

"""An edge in a connection."""
type VoteReviewEdge {
  """The item at the end of the edge."""
  node: VoteReview!

  """A cursor for use in pagination."""
  cursor: String!
}

enum VoteReviewOrderByInput {
  voteObject_ASC
  voteObject_DESC
  voteType_ASC
  voteType_DESC
  text_ASC
  text_DESC
  id_ASC
  id_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type VoteReviewPreviousValues {
  voteObject: VoteObject!
  voteType: VoteType!
  text: String
}

input VoteReviewScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [VoteReviewScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [VoteReviewScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [VoteReviewScalarWhereInput!]
  voteObject: VoteObject

  """All values that are not equal to given value."""
  voteObject_not: VoteObject

  """All values that are contained in given list."""
  voteObject_in: [VoteObject!]

  """All values that are not contained in given list."""
  voteObject_not_in: [VoteObject!]
  voteType: VoteType

  """All values that are not equal to given value."""
  voteType_not: VoteType

  """All values that are contained in given list."""
  voteType_in: [VoteType!]

  """All values that are not contained in given list."""
  voteType_not_in: [VoteType!]
  text: String

  """All values that are not equal to given value."""
  text_not: String

  """All values that are contained in given list."""
  text_in: [String!]

  """All values that are not contained in given list."""
  text_not_in: [String!]

  """All values less than the given value."""
  text_lt: String

  """All values less than or equal the given value."""
  text_lte: String

  """All values greater than the given value."""
  text_gt: String

  """All values greater than or equal the given value."""
  text_gte: String

  """All values containing the given string."""
  text_contains: String

  """All values not containing the given string."""
  text_not_contains: String

  """All values starting with the given string."""
  text_starts_with: String

  """All values not starting with the given string."""
  text_not_starts_with: String

  """All values ending with the given string."""
  text_ends_with: String

  """All values not ending with the given string."""
  text_not_ends_with: String
}

type VoteReviewSubscriptionPayload {
  mutation: MutationType!
  node: VoteReview
  updatedFields: [String!]
  previousValues: VoteReviewPreviousValues
}

input VoteReviewSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [VoteReviewSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [VoteReviewSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [VoteReviewSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: VoteReviewWhereInput
}

input VoteReviewUpdateManyDataInput {
  voteObject: VoteObject
  voteType: VoteType
  text: String
}

input VoteReviewUpdateManyMutationInput {
  voteObject: VoteObject
  voteType: VoteType
  text: String
}

input VoteReviewUpdateManyWithoutEpisodeInput {
  create: [VoteReviewCreateWithoutEpisodeInput!]
  updateMany: [VoteReviewUpdateManyWithWhereNestedInput!]
  deleteMany: [VoteReviewScalarWhereInput!]
}

input VoteReviewUpdateManyWithoutPodcastStationInput {
  create: [VoteReviewCreateWithoutPodcastStationInput!]
  updateMany: [VoteReviewUpdateManyWithWhereNestedInput!]
  deleteMany: [VoteReviewScalarWhereInput!]
}

input VoteReviewUpdateManyWithoutUserInput {
  create: [VoteReviewCreateWithoutUserInput!]
  updateMany: [VoteReviewUpdateManyWithWhereNestedInput!]
  deleteMany: [VoteReviewScalarWhereInput!]
}

input VoteReviewUpdateManyWithWhereNestedInput {
  where: VoteReviewScalarWhereInput!
  data: VoteReviewUpdateManyDataInput!
}

input VoteReviewWhereInput {
  """Logical AND on all given filters."""
  AND: [VoteReviewWhereInput!]

  """Logical OR on all given filters."""
  OR: [VoteReviewWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [VoteReviewWhereInput!]
  voteObject: VoteObject

  """All values that are not equal to given value."""
  voteObject_not: VoteObject

  """All values that are contained in given list."""
  voteObject_in: [VoteObject!]

  """All values that are not contained in given list."""
  voteObject_not_in: [VoteObject!]
  voteType: VoteType

  """All values that are not equal to given value."""
  voteType_not: VoteType

  """All values that are contained in given list."""
  voteType_in: [VoteType!]

  """All values that are not contained in given list."""
  voteType_not_in: [VoteType!]
  text: String

  """All values that are not equal to given value."""
  text_not: String

  """All values that are contained in given list."""
  text_in: [String!]

  """All values that are not contained in given list."""
  text_not_in: [String!]

  """All values less than the given value."""
  text_lt: String

  """All values less than or equal the given value."""
  text_lte: String

  """All values greater than the given value."""
  text_gt: String

  """All values greater than or equal the given value."""
  text_gte: String

  """All values containing the given string."""
  text_contains: String

  """All values not containing the given string."""
  text_not_contains: String

  """All values starting with the given string."""
  text_starts_with: String

  """All values not starting with the given string."""
  text_not_starts_with: String

  """All values ending with the given string."""
  text_ends_with: String

  """All values not ending with the given string."""
  text_not_ends_with: String
  user: UserWhereInput
  podcastStation: PodcastStationWhereInput
  episode: PodcastEpisodeWhereInput
}

enum VoteType {
  UPVOTE
  DWVOTE
}
